# version: '3.8'

# services:
#   app:
#     build: .
#     container_name: spring-boot-app
#     environment:
#       - SPRING_DATASOURCE_URL=jdbc:postgresql://ep-little-cloud-a4kqhyef.us-east-1.aws.neon.tech:5432/verceldb
#       - SPRING_DATASOURCE_USERNAME=default
#       - SPRING_DATASOURCE_PASSWORD=bt0sEfdGA8Cg
#       - SERVER_PORT=${PORT} # Render define a variável PORT automaticamente
#     ports:
#       - "${PORT}:${PORT}"
#     depends_on:
#       - wait-for-db

#   wait-for-db:
#     image: jwilder/dockerize
#     # command: dockerize -wait tcp://${DB_HOST}:${DB_PORT} -timeout 60s
#     depends_on: []
version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: postgres-container
    environment:
      POSTGRES_USER: darlan
      POSTGRES_PASSWORD: darlan
      POSTGRES_DB: chacasanova
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  flyway:
    image: flyway/flyway:9.16.0
    container_name: flyway-container
    command: -url=jdbc:postgresql://postgres:5432/chacasanova -user=darlan -password=darlan -schemas=public migrate
    depends_on:
      - postgres
    volumes:
      - ./sql/migrations:/flyway/sql # Monta o diretório de migrações SQL no container Flyway

  app:
    build: .
    container_name: spring-boot-app
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/chacasanova
      - SPRING_DATASOURCE_USERNAME=darlan
      - SPRING_DATASOURCE_PASSWORD=darlan
      - SERVER_PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - flyway
    entrypoint: ["./wait-for-it.sh", "postgres:5432", "--"]
    command: ["java", "-jar", "target/chacasanova-0.0.1-SNAPSHOT.jar"]

volumes:
  postgres-data:
    driver: local




